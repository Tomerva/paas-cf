---

- type: replace
  path: /instance_groups/name=uaa/jobs/name=uaa/properties/login/oauth?/providers/google
  value:
    type: oidc1.0
    authUrl: https://accounts.google.com/o/oauth2/v2/auth
    tokenUrl: https://www.googleapis.com/oauth2/v4/token
    tokenKeyUrl: https://www.googleapis.com/oauth2/v3/certs
    issuer: https://accounts.google.com
    redirectUrl: https://login.((system_domain))/uaa
    scopes:
      - openid
      - profile
      - email
    linkText: Google
    showLinkText: true
    addShadowUserOnLogin: false
    relyingPartyId: ((google_oauth_client_id))
    relyingPartySecret: ((google_oauth_client_secret))
    skipSslValidation: false
    attributeMappings:
      # UAA will attempt to find an existing user with a username matching the
      # attribute from Google named below (e.g., `sub`.) If that fails it will
      # attempt to find an existing UAA user whose email matches the email
      # attribute from Google.
      #
      # This is secure because Google verifies email addresses and appears to
      # forbid multiple accounts from having the same email address.
      user_name: sub
