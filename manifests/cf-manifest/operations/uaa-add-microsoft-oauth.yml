---

- type: replace
  path: /instance_groups/name=uaa/jobs/name=uaa/properties/login/oauth?/providers/microsoft
  value:
    type: oidc1.0
    authUrl: ((microsoft_oauth_auth_url))
    tokenUrl: ((microsoft_oauth_token_url))
    tokenKeyUrl: ((microsoft_oauth_token_key_url))
    issuer: ((microsoft_oauth_issuer))
    issuerValidationMode: domain_only
    redirectUrl: https://login.((system_domain))/uaa
    scopes:
      - openid
      - profile
      - email
    linkText: Microsoft
    showLinkText: true
    addShadowUserOnLogin: false
    relyingPartyId: ((microsoft_oauth_client_id))
    relyingPartySecret: ((microsoft_oauth_client_secret))
    skipSslValidation: false
    storeCustomAttributes: false
    attributeMappings:
      # UAA will attempt to find an existing user with a username matching the
      # attribute from Google named below (e.g., `oid`.) If that fails it will
      # attempt to find an existing UAA user whose email matches the email
      # attribute from Google.
      #
      # We believe this is secure for Microsoft, but the reasoning is complex.
      # Microsoft's `email` claim does not necessarily return a verified
      # email address. But the domain in it must have been verified, which
      # still proves some ownership/administration ability.
      user_name: oid
