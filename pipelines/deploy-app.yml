---
resource_types:
  - name: s3-iam
    type: docker-image
    source:
      repository: governmentpaas/s3-resource
      tag: 594eaa9f4d93b2ed32a7e5e1cdea5b380e2f6682

resources:
  - name: {{app_name}}
    type: git
    source:
      uri: {{app_github_repo_uri}}
      branch: {{app_repository_branch}}

  - name: secrets
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: {{secrets_file}}

jobs:
  - name: test
    plan:
      - get: {{app_name}}
        trigger: true
      - task: test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: {{app_deployment_docker_image}}
          inputs:
            - name: {{app_name}}
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                if [ ! -f {{app_name}}/release/test ]; then
                  echo No script found at {{app_name}}/release/test, tests disabled
                  exit 0
                fi
                echo Testing with script {{app_name}}/release/test
                cd {{app_name}} && ./release/test

  - name: deploy
    serial: true
    plan:
      - get: {{app_name}}
        passed: ['test']
        trigger: true
      - get: secrets
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: {{app_deployment_docker_image}}
          inputs:
            - name: {{app_name}}
          outputs:
            - name: files-to-push
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                copy_files() {
                  echo Copying files to destination...
                  cp -pr {{app_name}}/* files-to-push/
                  ls -l files-to-push
                }

                if [ ! -f {{app_name}}/release/build ]; then
                  echo No script found at {{app_name}}/release/build, build disabled
                  copy_files
                  exit 0
                fi
                echo Building with script {{app_name}}/release/build...
                (cd {{app_name}} && ./release/build)
                copy_files

      - task: push
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/cf-cli
              tag: 895cf6752c8ec64af05a3a735186b90acd3db65a
          inputs:
            - name: files-to-push
            - name: secrets
          params:
            CF_API: {{cf_api}}
            CF_API_SECURE: {{cf_api_secure}}
            CF_USER: {{cf_user}}
            CF_PASSWORD: {{cf_password}}
            CF_ORG: {{cf_org}}
            CF_SPACE: {{cf_space}}
            SECRETS_FILE: {{secrets_file}}
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                if [ -z "${CF_API}" ]; then
                  echo "\$CF_API is empty, cannot connect to CF API"
                  exit 1
                fi
                echo Logging on to Cloudfoundry...
                cf login "${CF_API_SECURE:-}" -a "${CF_API}" -u "${CF_USER}" \
                -p "${CF_PASSWORD}" -o "${CF_ORG}" -s "${CF_SPACE}"

                cd files-to-push
                if [ -f release/push ]; then
                  echo Pushing to Cloudfoundry with script {{app_name}}/release/push...
                  ./release/push

                else
                  echo No script found at {{app_name}}/release/push, using default push

                  echo Deploy with zero downtime
                  cf blue-green-deploy {{app_name}}

                  echo Delete left over app
                  cf delete -f {{app_name}}-old
                fi
