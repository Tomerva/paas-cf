---
resource_types:
  - name: s3-iam
    type: docker-image
    source:
      repository: governmentpaas/s3-resource
      tag: 9e7cf1dd32699c091e22e46b349e050443d9ac1a

  - name: semver-iam
    type: docker-image
    source:
      repository: governmentpaas/semver-resource
      tag: dc33fee5c9061263e83159a893340f46728d93b5

resources:
  - name: pipeline-trigger
    type: semver-iam
    source:
      bucket: {{state_bucket_name}}
      region_name: {{aws_region}}
      key: {{pipeline_trigger_file}}

  - name: paas-release-ci
    type: git
    source:
      uri: https://github.com/alphagov/paas-release-ci
      branch: {{branch_name}}

  - name: release-ci-tfstate
    type: s3-iam
    source:
      bucket: {{state_bucket_name}}
      region_name: {{aws_region}}
      versioned_file: release-ci.tfstate

jobs:
  - name: self-update
    plan:
      - get: paas-release-ci
        trigger: true
      - task: self-update-pipeline
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/self-update-pipelines
              tag: 895cf6752c8ec64af05a3a735186b90acd3db65a
          inputs:
            - name: paas-release-ci
          params:
            SELF_UPDATE_PIPELINE: {{self_update_pipeline}}
            DEPLOY_ENV: {{deploy_env}}
            BRANCH: {{branch_name}}
            MAKEFILE_ENV_TARGET: {{makefile_env_target}}
            CONCOURSE_ATC_PASSWORD: {{concourse_atc_password}}
            CONCOURSE_URL: {{concourse_url}}
            GITHUB_ACCESS_TOKEN: {{github_access_token}}
            STATE_BUCKET_NAME: {{state_bucket_name}}
            RELEASES_BUCKET_NAME: {{releases_bucket_name}}
            CF_API: {{cf_api}}
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                if [ "${SELF_UPDATE_PIPELINE}" != "true" ]; then
                  echo "Self update pipeline is disabled. Skipping. (set SELF_UPDATE_PIPELINE=true to enable)"
                else
                  echo "Self update pipeline is enabled. Updating. (set SELF_UPDATE_PIPELINE=false to disable)"

                  make -C ./paas-release-ci "${MAKEFILE_ENV_TARGET}" pipelines
                fi
      - put: pipeline-trigger
        params: {bump: patch}

  - name: init
    plan:
      - aggregate:
          - get: pipeline-trigger
            passed: ['self-update']
            trigger: true
          - get: paas-release-ci
            passed: ['self-update']
      - task: bootstrap-s3-state
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/curl-ssl
              tag: 895cf6752c8ec64af05a3a735186b90acd3db65a
          inputs:
            - name: paas-release-ci
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                paas-release-ci/scripts/s3init.sh {{state_bucket_name}} release-ci.tfstate paas-release-ci/pipelines/init_files/terraform.tfstate.tpl

  - name: terraform
    plan:
      - aggregate:
          - get: pipeline-trigger
            passed: ['init']
            trigger: true
          - get: paas-release-ci
            passed: ['init']
          - get: release-ci-tfstate
      - task: terraform-apply
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/terraform
              tag: 895cf6752c8ec64af05a3a735186b90acd3db65a
          inputs:
            - name: paas-release-ci
            - name: release-ci-tfstate
          outputs:
            - name: updated-release-ci-tfstate
          params:
            TF_VAR_deploy_env: {{deploy_env}}
            TF_VAR_releases_bucket_name: {{releases_bucket_name}}
            TF_VAR_releases_blobs_bucket_name: {{releases_blobs_bucket_name}}
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                terraform apply \
                  -state=release-ci-tfstate/release-ci.tfstate -state-out=updated-release-ci-tfstate/release-ci.tfstate \
                  paas-release-ci/terraform
        ensure:
          put: release-ci-tfstate
          params:
            file: updated-release-ci-tfstate/release-ci.tfstate
  - name: dynamic-pipelines
    plan:
      - aggregate:
          - get: pipeline-trigger
            passed: ['terraform']
            trigger: true
          - get: paas-release-ci
            passed: ['terraform']
      - task: build-pipelines
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/self-update-pipelines
              tag: 895cf6752c8ec64af05a3a735186b90acd3db65a
          inputs:
            - name: paas-release-ci
          params:
            DEPLOY_ENV: {{deploy_env}}
            BRANCH: {{branch_name}}
            MAKEFILE_ENV_TARGET: {{makefile_env_target}}
            CONCOURSE_ATC_PASSWORD: {{concourse_atc_password}}
            CONCOURSE_URL: {{concourse_url}}
            GITHUB_ACCESS_TOKEN: {{github_access_token}}
            STATE_BUCKET_NAME: {{state_bucket_name}}
            RELEASES_BUCKET_NAME: {{releases_bucket_name}}
            CF_API: {{cf_api}}
            CF_API_SECURE: {{cf_api_secure}}
            CF_USER: {{cf_user}}
            CF_PASSWORD: {{cf_password}}
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                make -C ./paas-release-ci "${MAKEFILE_ENV_TARGET}" boshrelease-pipelines
                make -C ./paas-release-ci "${MAKEFILE_ENV_TARGET}" app-deployment-pipelines
